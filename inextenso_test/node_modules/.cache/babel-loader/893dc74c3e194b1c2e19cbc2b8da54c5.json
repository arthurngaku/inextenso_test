{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\reactjs\\\\inextenso_test\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: {\n        1: {\n          id: 1,\n          label: \"Select All\",\n          checked: false\n        },\n        2: {\n          id: 2,\n          label: \"Item 1\",\n          checked: false\n        },\n        3: {\n          id: 3,\n          label: \"Item 2\",\n          checked: false\n        },\n        4: {\n          id: 4,\n          label: \"Item 3\",\n          checked: false\n        },\n        5: {\n          id: 5,\n          label: \"Item 4\",\n          checked: false\n        }\n      },\n      //J'initialise un compteur qui va me permettre de savoir si tout est  coché ou pas\n      compteur: 0\n    };\n\n    this.handleChange = id => {\n      let items = this.state.items;\n\n      if (id == 1) {\n        if (items[id].checked) {\n          this.setState(state => {\n            return {\n              compteur: 0\n            };\n          });\n          Object.keys(items).map(function (key, index) {\n            items[key].checked = false;\n          }); //décoche tout le monde\n        } else {\n          this.setState(state => {\n            return {\n              compteur: Object.keys(items).length\n            };\n          });\n          Object.keys(items).map(function (key, index) {\n            items[key].checked = true;\n          }); //coche tout le monde;\n        }\n      } else {\n        if (items[id].checked) {\n          this.setState({\n            compteur: this.state.compteur - 1\n          });\n          items[id].checked = false;\n          console.log(\"else -1\");\n        } else {\n          this.setState({\n            compteur: this.state.compteur + 1\n          });\n          items[id].checked = true;\n          console.log(\"else +1\");\n        }\n\n        if (this.state.compteur >= Object.keys(items).length - 1) {\n          items[1].checked = true; //coche item 1;\n        } else {\n          items[1].checked = false; //décoche item 1\n        }\n      }\n\n      this.setState({\n        items: items\n      });\n    };\n  }\n\n  render() {\n    const title = \"List of items\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, title), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, Object.keys(this.state.items).map((key, index) => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"name\",\n      onChange: () => this.handleChange(this.state.items[key].id),\n      checked: this.state.items[key].checked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }), this.state.items[key].label))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/wamp/www/reactjs/inextenso_test/src/App.js"],"names":["React","App","Component","state","items","id","label","checked","compteur","handleChange","setState","Object","keys","map","key","index","length","console","log","render","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  //Je déclare le state où je liste les items comme si je listais\n  state = {\n    items: {\n      1:{id: 1, label: \"Select All\", checked: false},\n      2:{id: 2, label: \"Item 1\", checked: false},\n      3:{id: 3, label: \"Item 2\", checked: false},\n      4:{id: 4, label: \"Item 3\", checked: false},\n      5:{id: 5, label: \"Item 4\", checked: false},\n    },\n    //J'initialise un compteur qui va me permettre de savoir si tout est  coché ou pas\n    compteur:0\n  }\n\n  //Fonction qui lors surgit de l'évenenement onChange des checkbox\n  handleChange = (id) => {\n    let items = this.state.items;\n    if(id==1) {\n      if (items[id].checked) {\n        this.setState((state) => {\n          return {compteur: 0}\n        });\n        Object.keys(items).map(function(key,index) { items[key].checked=false; });\n        //décoche tout le monde\n      }\n      else {\n        this.setState((state) => {\n          return {compteur: Object.keys(items).length }\n        });\n        Object.keys(items).map(function(key,index) { items[key].checked=true; });\n        //coche tout le monde;\n      }\n    }\n    else {\n      if (items[id].checked) {\n        this.setState({compteur: this.state.compteur-1});\n        items[id].checked = false;\n        console.log(\"else -1\");\n      }\n      else {\n        this.setState({compteur: this.state.compteur+1});\n        items[id].checked = true;\n        console.log(\"else +1\");\n      }\n\n      if(this.state.compteur>= Object.keys(items).length-1) {\n        items[1].checked = true;\n        //coche item 1;\n      }\n      else {\n        items[1].checked = false;\n        //décoche item 1\n      }\n\n    }\n    this.setState({items: items});\n  }\n\n  render(){\n    const title = \"List of items\";\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3>{title}</h3>\n          <ul>\n            {\n              Object.keys(this.state.items).map((key,index) => (\n              <li>\n                <label>\n                  <input type=\"checkbox\" name=\"name\" onChange={()=>this.handleChange(this.state.items[key].id)} checked={this.state.items[key].checked} />\n                  {this.state.items[key].label}\n                </label>\n              </li>\n            ))}\n          </ul>\n        </header>\n      </div>\n      )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}