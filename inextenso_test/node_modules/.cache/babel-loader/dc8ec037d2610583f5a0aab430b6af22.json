{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp\\\\www\\\\reactjs\\\\inextenso_test\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [{\n        id: 1,\n        label: \"Select All\",\n        checked: false\n      }, {\n        id: 2,\n        label: \"Item 1\",\n        checked: false\n      }, {\n        id: 3,\n        label: \"Item 2\",\n        checked: false\n      }, {\n        id: 4,\n        label: \"Item 3\",\n        checked: false\n      }, {\n        id: 5,\n        label: \"Item 4\",\n        checked: false\n      }],\n      //J'initialise un compteur qui va me permettre de savoir si tout est  coché ou pas\n      compteur: 0\n    };\n\n    this.handleChange = id => {\n      this.setState({\n        compteur: 4\n      });\n      let items = this.state.items.slice();\n\n      if (id == 1) {\n        if (this.state.items[id].checked) {\n          this.setState({\n            compteur: 4\n          });\n          items.checked = true; //coche tout le monde;\n        } else {\n          this.setState({\n            compteur: 0\n          });\n          items.checked = false; //décoche tout le monde\n        }\n      } else {\n        if (items.filter(ele => ele.id == id).checked) this.setState({\n          compteur: this.state.compteur + 1\n        });else //this.setState({compteur: this.state.compteur-1})\n          if (this.state.compteur == 4) {\n            items.filter(ele => ele.id == 1).checked = true; //coche item 1;\n          } else {\n            //this.setState({compteur: 0});\n            items.filter(ele => ele.id == 1).checked = false; //décoche item 1\n          }\n      }\n\n      this.setState({\n        items: items\n      }); //console.log(this.state.compteur);\n      //console.log(this.state.items[id].checked);\n      //console.log(id);\n    };\n  }\n\n  render() {\n    const title = \"List of items\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, title), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, this.state.items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"name\",\n      onChange: () => this.handleChange(item.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }), item.label))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/wamp/www/reactjs/inextenso_test/src/App.js"],"names":["React","App","Component","state","items","id","label","checked","compteur","handleChange","setState","slice","filter","ele","render","title","map","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  //Je déclare le state où je liste les items comme si je listais\n  state = {\n    items: [\n      {id: 1, label: \"Select All\", checked: false},\n      {id: 2, label: \"Item 1\", checked: false},\n      {id: 3, label: \"Item 2\", checked: false},\n      {id: 4, label: \"Item 3\", checked: false},\n      {id: 5, label: \"Item 4\", checked: false},\n    ],\n    //J'initialise un compteur qui va me permettre de savoir si tout est  coché ou pas\n    compteur:0\n  }\n\n  //Fonction\n  handleChange = (id) => {\n    this.setState({compteur: 4});\n    let items = this.state.items.slice();\n    if(id==1) {\n      if (this.state.items[id].checked) {\n        this.setState({compteur: 4});\n        items.checked=true;\n        //coche tout le monde;\n      }\n      else {\n        this.setState({compteur: 0});\n        items.checked=false;\n        //décoche tout le monde\n      }\n    }\n    else {\n      if (items.filter(ele => ele.id == id).checked)\n        this.setState({compteur: this.state.compteur+1})\n      else\n        //this.setState({compteur: this.state.compteur-1})\n\n      if(this.state.compteur==4) {\n        items.filter(ele => ele.id == 1).checked = true;\n        //coche item 1;\n      }\n      else {\n        //this.setState({compteur: 0});\n        items.filter(ele => ele.id == 1).checked = false;\n        //décoche item 1\n      }\n    }\n    this.setState({items: items});\n\n    //console.log(this.state.compteur);\n    //console.log(this.state.items[id].checked);\n    //console.log(id);\n  }\n\n  render(){\n    const title = \"List of items\";\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h3>{title}</h3>\n          <ul>{this.state.items.map(item => (\n              <li>\n                <label>\n                  <input type=\"checkbox\" name=\"name\" onChange={()=>this.handleChange(item.id)} />\n                  {item.label}\n                </label>\n              </li>\n          ))}</ul>\n        </header>\n      </div>\n      )\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}